@import "../../index.scss";
@import "./animations.scss";

.App {
  display: flex;
}

.content-wrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.navigation-bar {
  position: sticky;
  display: flex;
  align-items: center;
  justify-content: space-between;
  top: 0;
  right: 0;
  background-color: $white;
  height: 36px;
  box-shadow: $low-shadow;
  padding: 20px ($double-spacing * 2);
  z-index: 3;
}

/* ------------------
   --- SIDEBAR ---
--------------------*/
.SidebarWrapper {
  position: relative;

  .Sidebar {
    position: sticky;
    display: flex;
    flex-direction: column;
    gap: 2px;
    top: 0;
    bottom: 0;
    height: calc(100vh - $double-spacing);
    background-color: $white;
    min-width: 200px;
    padding: $default-spacing;
    box-shadow: $low-shadow;
    transition: padding 0.4s $quick;
    z-index: 3;

    .logo {
      width: fit-content;
      max-height: 40px;
      padding: 0 0 $default-spacing $half-spacing;
    }

    .SidebarLink {
      display: flex;
      position: relative;
      align-items: center;
      gap: 12px;
      padding: 12px 32px 12px 16px;
      border-left: 0px solid transparent;
      border-radius: $bd-radius;
      transition: padding 0.4s $bouncy;
      cursor: pointer;

      &:has(a:focus) {
        background-color: lighten($primary, 40);
      }
      a {
        color: $dark-grey;
        text-decoration: none;
        outline: none;
      }
      .icon {
        color: $light-grey;
        font-size: $md-text;
        line-height: 0;
      }
      &:hover {
        background-color: lighten($primary, 40);
      }
      &.active {
        padding: 12px 32px 12px 24px;
        border-left: 4px solid $primary;
        background-color: lighten($primary, 40);
        a {
          color: $primary;
          font-weight: 600;
        }
        .icon {
          color: lighten($primary, 10);
        }
      }
    }
    h4 {
      color: $light-grey;
      font-family: $title-font;
      font-size: $small-text;
      margin: $default-spacing 0 0 $half-spacing;
      text-transform: uppercase;
    }
    &.collapsed {
      min-width: 64px;
      padding: $default-spacing;
      &:hover {
        transition: all 0.4s $quick;
      }
      .SidebarLink {
        gap: 0;
        font-size: $h3-text;
        padding: 12px 16px 12px 20px;
        border-left: 0px solid transparent;
        transition: all 0.2s $quick;
        &.active {
          border-left: 4px solid $primary;
        }
        &:has(.Tooltip) .Tooltip {
          font-size: 14px;
          top: 0;
          &.left {
            left: 80px;
          }
        }
      }
      .logo {
        padding: 4px 20px 16px 12px;
      }
    }
  }

  .sidebar-toggle-button {
    position: sticky;
    left: 100%;
    transform: translateX(16px);
    top: 24px;
    padding: 4px !important;
    box-shadow: $high-shadow;
    margin: 0 !important;
    z-index: 5;
    &:hover {
      padding: $default-spacing ($default-spacing + 4);
      transition: padding 0.4s $quick 0.05s;
    }
  }
}

/* ------------------
  --- PAGE CONTENT ---
--------------------*/

.Content {
  padding: $double-spacing ($double-spacing * 2);

  .section-title {
    margin: $default-spacing auto $double-spacing;
    color: $dark-grey;
  }
}

/* ------------------
   --- CONTAINER ---
--------------------*/
.Container {
  background-color: $white;
  padding: $default-spacing;
  border-radius: $bd-radiusL;
  box-shadow: $low-shadow;
  margin-bottom: $double-spacing;
  display: flex;
  flex-direction: column;
  .title-container {
    display: flex;
    gap: $default-spacing;
    margin-bottom: $default-spacing;
    .icon {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 28px;
      height: 28px;
      border-radius: $bd-radius;
      background-color: $ultraLight-grey;
      color: $light-grey;
      font-size: $md-text;
    }
    h3 {
      margin: 0;
      color: $title-grey;
    }
  }
  p:first-of-type {
    margin-top: 0;
  }
}

/* ------------------
   --- BUTTON ---
--------------------*/

.button {
  cursor: pointer;
  padding: 12px 24px;
  border-radius: $bd-radius;
  font-weight: 600;
  font-size: $md-text;
  margin-bottom: 16px;
  margin-right: 16px;
  transition: all 0.05s ease-in;
  &.rounded {
    border-radius: 999px;
  }
  &.favicon {
    padding: $default-spacing;
    display: inline-flex;
    border-radius: 50%;
    font-size: $big-text;
  }
  .icon {
    margin-right: calc($default-spacing / 2);
    fill: inherit;
    position: relative;
    top: 2px;
    font-size: $big-text;
  }
}

.primary {
  color: $white;
  fill: $white;
  background-color: $primary;
  border: 0.5px solid $primary;
  &:hover {
    background-color: darken($primary, 10);
    border: 0.5px solid darken($primary, 10);
  }
  &.outline {
    color: $primary;
    fill: $primary;
    .favicon {
      fill: $primary;
      font-size: $big-text;
    }
  }
}

.secondary {
  color: $white;
  fill: $white;
  background-color: $secondary-dark;
  border: 0.5px solid $secondary-dark;
  &:hover {
    background-color: darken($secondary-dark, 10);
    border: 0.5px solid darken($secondary-dark, 10);
  }
  &.outline {
    color: $secondary-dark;
    fill: $secondary-dark;
  }
}

.warning {
  color: $white;
  fill: $white;
  background-color: $warning;
  border: 0.5px solid $warning;
  &:hover {
    background-color: darken($warning, 5);
    border: 0.5px solid darken($warning, 5);
  }
  &.outline {
    color: $warning;
    fill: $warning;
  }
}

.alert {
  color: $white;
  fill: $white;
  background-color: $alert;
  border: 0.5px solid $alert;
  &:hover {
    background-color: darken($alert, 5);
    border: 0.5px solid darken($alert, 5);
  }
  &.outline {
    color: $alert;
    fill: $alert;
  }
}

.outline {
  background-color: $white;
  &:hover {
    background-color: darken($white, 5);
  }
}

.cardBtnLink {
  background-color: none;
  border-radius: $bd-radius;
  box-shadow: none;
  border: 1px solid transparent;
  margin-bottom: $double-spacing;
  transition: all 0.4s $quick;
  cursor: pointer;
  &:hover {
    background-color: $white;
    box-shadow: $low-shadow;
    border: 1px solid lighten($primary, 20);
    .thumb-container {
      border-radius: $bd-radius $bd-radius 0 0;
      background-color: darken($alt-bg, 2);
    }
    .caption h4 {
      color: $primary;
    }
    img {
      transform: scale(1.1);
    }
    .thumb-container::after {
      width: 120%;
      height: 240%;
      opacity: 1;
      transition: all 0.4s $bouncy 0.1s;
    }
  }
  .thumb-container {
    width: 100%;
    height: 180px;
    border-radius: $bd-radius;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    background-color: darken($alt-bg, 4);

    img {
      width: 160px;
      height: auto;
      z-index: 1;
      transition: all 0.4s $bouncy;
    }
  }
  .caption {
    padding: $default-spacing $default-spacing $double-spacing;
    h4 {
      font-family: $title-font;
      color: $text-grey;
      font-weight: $book;
      margin: 0 0 4px;
    }
    small {
      color: $medium-grey;
    }
  }
}

/* ------------------
   --- ACCORDION ---
--------------------*/

.Accordion {
  height: auto;
  width: 100%;
  overflow: hidden;
  margin: 0 auto 8px;
  &:has(.AccordionContent) .AccordionLabel {
    background-color: lighten($secondary, 15);
    border-radius: $bd-radius $bd-radius 0 0;
  }
  &:has(.AccordionContent) .AccordionLabel:hover {
    background-color: lighten($secondary, 10);
  }
  .AccordionLabel {
    cursor: pointer;
    display: flex;
    align-items: center;
    padding: 16px;
    border-radius: $bd-radius;
    background-color: lighten($primary, 40);
    &:hover {
      background-color: lighten($primary, 37);
    }
    p {
      flex-grow: 1;
      margin: 0;
      color: $dark-grey;
      font-size: $big-text;
      font-weight: 600;
    }
    span {
      margin: 0;
      color: $dark-grey;
    }
  }
  .AccordionContent {
    font-size: $md-text;
    padding: 16px;
    border: 0.5px solid lighten($primary, 40);
    background-color: $white;
    margin: 0 auto;
    border-radius: 0 0 $bd-radius $bd-radius;
  }
}

/* ------------------
   --- LABEL ---
--------------------*/

.label-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  label {
    color: $text-grey;
    font-weight: $heavy;
    display: block;
    margin: 4px 4px 8px;
  }
}

/* ------------------
   --- INPUT ---
--------------------*/

.Input-container {
  flex: 1 1 auto;

  &.xs {
    max-width: 160px;
  }
  &.sm {
    max-width: 240px;
  }
  &.md {
    max-width: 320px;
  }
  &.lg {
    max-width: 400px;
  }
  &.xl {
    max-width: 480px;
  }
  &.xxl {
    max-width: 560px;
  }

  .Input-wrapper {
    position: relative;

    .Input {
      width: calc(100% - $default-spacing);
      padding: 12px $half-spacing;
      border-radius: $bd-radius;
      background-color: $white;
      border: 0.5px solid $light-grey;
      height: fit-content;
      font-size: $md-text;
      flex-grow: 1;
      color: $text-grey;
      margin-bottom: $default-spacing;

      &::placeholder {
        color: $light-grey;
      }
      &:focus {
        outline: 0.5px solid $secondary;
      }
    }
    &:has(.Input-error) .Input {
      border: 0.5px solid $alert;
      outline: 0.5px solid $alert;
    }
    small {
      position: absolute;
      left: 4px;
      top: 48px;
    }
    .Input-error {
      color: $alert;

      &:focus {
        outline: 0.5px solid $alert;
      }
    }
  }
}

/* -------------------------------
   --- CHECKBOX & RADIO BUTTON ---
   ------------------------------*/
.CheckBox,
.RadioButton {
  position: relative;
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: $default-spacing;
  input[type="checkbox"i],
  input[type="radio" i] {
    cursor: pointer;
    opacity: 0;
    position: absolute;
    height: 100%;
    width: 100%;
  }
  &:has(input[type="checkbox"i]:checked) .Box {
    background-color: $secondary-dark;
    color: $white;
    font-size: $md-text;
  }
  &:has(input[type="checkbox"i]:focus) .Box,
  &:has(input[type="radio"i]:focus) .Circle {
    outline: 1px solid $secondary-dark;
  }
  &:has(input[type="radio"i]:checked) .Circle {
    background-color: transparentize($secondary-dark, 0.8);
    &:after {
      background-color: $secondary-dark;
    }
  }
  .Box {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 20px;
    height: 20px;
    border-radius: $bd-radius;
    background-color: transparent;
    border: 2px solid $secondary-dark;
    color: transparent;
    font-size: 1px;
  }
  .Circle {
    position: relative;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: transparent;
    border: 2px solid $secondary-dark;
    color: transparent;
    font-size: 1px;
    &::after {
      content: "";
      position: absolute;
      width: 12px;
      height: 12px;
      background-color: transparent;
      border-radius: 50%;
      top: calc(50% - 6px);
      left: calc(50% - 6px);
    }
  }
  &:hover {
    .Box,
    .Circle {
      background-color: transparentize($secondary-dark, 0.8);
    }
    label {
      color: lighten($medium-grey, 10);
    }
  }

  label {
    color: $medium-grey;
    font-size: $md-text;
  }
}

/* ------------------
   --- DROPDOWN ---
--------------------*/

.Dropdown {
  .Panel {
    position: relative;
    padding: 12px $default-spacing;
    border-radius: $bd-radius;
    background-color: $white;
    border: 0.5px solid $light-grey;
    height: fit-content;
    flex: 1;
    color: $text-grey;
    margin-bottom: $default-spacing;
    cursor: pointer;
    p {
      margin: 0;
      font-size: $md-text;
      flex-grow: 1;
    }
    &:focus {
      outline: 0.5px solid $secondary;
    }
    &:hover {
      background-color: lighten($primary, 40);
    }
    &:has(.Panel-option) {
      border: 0.5px solid $secondary;
    }
    &:has(.Panel-option):hover {
      background-color: $white;
    }
    .Panel-title {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .Panel-options-container {
      position: absolute;
      margin-top: 20px;
      border-radius: $bd-radius;
      left: 0;
      right: 0;
      overflow: hidden;
      font-size: $md-text;
      z-index: 999;
      box-shadow: $low-shadow;
      &:has(.Panel-option) {
        border: 0.5px solid $light-grey;
      }
    }
    .Panel-option {
      padding: 16px;
      background-color: $white;

      &:hover {
        background-color: lighten($primary, 40);
      }
    }
  }
}
/* ------------------
   --- MODAL ---
--------------------*/

.ModalBackground {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 999;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: transparentize(darken($primary, 35), 0.4);
  backdrop-filter: blur(2px);
  -webkit-backdrop-filter: blur(2px);
}
.Modal {
  position: fixed;
  z-index: 9999;
  background-color: $white;
  padding: $default-spacing;
  border-radius: $bd-radius;
  box-shadow: $high-shadow;
  top: 10%;
  width: 60%;
  max-width: 560px;
  left: calc(50% - 280px);

  &.sm {
    width: 60%;
    max-width: 320px;
    left: calc(50% - 160px);
  }
  &.lg {
    width: 80%;
    max-width: 800px;
    left: calc(50% - 400px);
  }
}

/* ------------------
   --- TABLE ---
--------------------*/

.Table {
  width: 100%;
  font-size: $md-text;
  thead {
    tr {
      background-color: $ultraLight-grey;
      color: $text-grey;
      text-transform: uppercase;

      th {
        text-align: left;
        font-size: $md-text;
        padding: 16px 24px;
        background-color: inherit;

        &:has(.sortable):hover {
          background-color: darken($ultraLight-grey, 2);
          cursor: pointer;
        }
        &:hover .sortable {
          color: $primary-light;
        }
        .sortable {
          display: flex;
          gap: 4px;

          &.active {
            color: $primary-light;
          }
        }
      }
      th:first-child {
        border-radius: $bd-radius 0 0 0;
      }
      th:last-child {
        border-radius: 0 $bd-radius 0 0;
      }
    }
  }
  tbody {
    tr {
      background-color: $white;
      &:nth-child(even) {
        background-color: $alt-bg;
      }
    }

    td {
      text-align: left;
      padding: 12px 24px;
      font-size: $md-text;

      &:has(.table-avatar) {
        padding-right: 8px;
        padding-bottom: 4px;
      }
    }
  }
  .currency {
    text-align: right;
    strong {
      font-size: $md-text;
    }
    &.total {
      background-color: lighten($secondary, 20);
      padding: 16px;
      font-size: $h3-text;
      border-radius: 0 0 $bd-radius $bd-radius;
    }
  }

  .table-avatar {
    display: flex;
    align-items: center;
    gap: 8px;
    text-wrap: nowrap;
    img {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      border: 2px solid $primary;
    }
  }
  .color {
    width: $default-spacing;
    height: $default-spacing;
    border-radius: 50%;
  }
}

/* ------------------
   --- TOOLTIP ---
--------------------*/

.Tooltip-container {
  position: relative;
  display: inline-block;
  cursor: pointer;
  &:focus {
    outline: none;
  }
  &:hover .Tooltip-icon,
  &:focus .Tooltip-icon {
    color: $primary-light;
  }

  .Tooltip-icon {
    color: $secondary-dark;
    font-size: $big-text;
    pointer-events: none;
  }

  .Tooltip {
    position: absolute;
    top: -16px;
    width: max-content;
    max-width: 240px;
    background-color: $primary;
    color: $white;
    box-shadow: $high-shadow;
    border-radius: $bd-radius;
    padding: $default-spacing;
    font-size: $small-text;
    opacity: 0;
    z-index: 9;
    &.left {
      left: $double-spacing;
      &:before {
        left: -4px;
      }
    }
    &.right {
      right: $double-spacing;
      &:before {
        right: -4px;
      }
    }
    &:before {
      content: "";
      width: 8px;
      height: 8px;
      transform: rotate(45deg);
      background-color: inherit;
      position: absolute;
      top: 20px;
    }
  }
}

/* ------------------
   --- SWITCH ---
--------------------*/

.Switch {
  position: relative;
  background-color: $ultraLight-grey;
  box-shadow: inset 1px 2px 4px ($light-grey);
  width: 40px;
  height: 24px;
  border-radius: 12px;
  cursor: pointer;
  &:hover .Switch-handle {
    background-color: $primary;
  }
  .Switch-handle {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 26px;
    height: 26px;
    top: -1px;
    background-color: $primary-light;
    color: $white;
    border-radius: 50%;
    transition: all 0.4s $bouncy;
    &.light {
      left: 2px;
    }
    &.dark {
      left: 16px;
    }
  }
}

/* ------------------
   --- BREADCRUMB ---
--------------------*/
.BreadcrumbContainer {
  display: flex;
  gap: 8px;
  color: $light-grey;
  .BreadcrumbLink {
    display: flex;
    align-items: center;
    gap: 4px;
    a {
      text-decoration: none;
      color: $primary;
      &:hover {
        color: $primary-light;
      }
    }
  }
  p {
    margin: 0;
    color: $text-grey;
  }
}

/* ------------------
   --- PLACEHOLDER ---
--------------------*/
.PlaceholderContainer {
  width: 100%;
  display: flex;

  &:has(.right) {
    justify-content: flex-end;
  }
  .PlaceholderGallery {
    width: 100%;
    display: flex;
    gap: 0 $default-spacing;
    flex-wrap: wrap;
  }
  .Placeholder {
    border-radius: $bd-radius;
    margin-bottom: $default-spacing;
    background: linear-gradient(
      to right,
      (
        rgba(44, 44, 44, 0.1) 0%,
        rgba(245, 245, 245, 0.18) 90%,
        rgba(44, 44, 44, 0.1) 100%
      )
    );
    transition: width 0.4s ease-out;
    &.text {
      height: 16px;
    }
    &.header {
      height: 200px;
      width: 100%;
    }
    &.gallery {
      height: 120px;
      flex-grow: 1;
    }
    &.button {
      height: 24px;
      margin-top: $double-spacing;
      cursor: default;
    }
    &.emptyLine {
      opacity: 0;
      visibility: hidden;
    }
    &.avatar {
      position: relative;
      height: 48px;
      width: 48px;
      border-radius: 50%;
      background-size: 400%;
      &::before {
        content: "";
        position: absolute;
        width: 48px;
        height: 12px;
        left: calc(48px + 16px);
        top: 8px;
        background: inherit;
        border-radius: $bd-radius;
      }
      &::after {
        content: "";
        position: absolute;
        width: 80px;
        height: 12px;
        left: calc(48px + 16px);
        top: 32px;
        background: inherit;
        border-radius: $bd-radius;
      }
    }
    &.chat {
      position: relative;
      height: 42px;
      border-radius: 24px;
      background-size: 200%;
      &::before {
        content: "";
        position: absolute;
        background: inherit;
        width: 8px;
        height: 8px;
      }
      &.left::before {
        left: 4px;
        bottom: -4px;
        background-size: 10000%;
        border-bottom-right-radius: 15px;
        transform: rotate(30deg);
      }
      &.right::before {
        right: 4px;
        bottom: -4px;
        background-size: 10000%;
        border-bottom-left-radius: 15px;
        transform: rotate(-30deg);
      }
    }
  }
}
